;========================================================
;				 Модуль инициализации
;========================================================

init:

	;-------------------------- Инициализация стека
	
	ldi		r17, RAMEND			; Выбор адреса вершины стека 
	out		SPL, r17			; Запись его в регистр стека

	;--------------------------- Инициализация компаратора

	ldi 	r17, 0x80			; Выключение компаратора
	out		ACSR, r17

	;-------------------------- Инициализация Главного предделителя

	ldi		r17, 0x80		    ; 
	out		CLKPR, r17			; 
	ldi		r17, 0x03			; Записываем 3 в регистр r17
	out		CLKPR, r17			; Записываем это число в CLKPR, указывая, что мы делим частоту на 8.

	;-------------------------- Инициализация портов ВВ по умолчанию (на вход с подтягивающим резистором)

	ser		r17
	out		PORTA, r17
	out		PORTB, r17
	out		PORTD, r17

	out		DDRA, CONST_ZERO
	out		DDRB, CONST_ZERO
	out		DDRD, CONST_ZERO

	;-------------------------- Инициализация порта зуммера

	cbi		PORT_BUZZER, BUZZER
	sbi		DDR_BUZZER, BUZZER

	;-------------------------- Инициализация портов ВВ для чипа TM1367

	sbi		DDR_TM1367, TM1637_CLK
	sbi		DDR_TM1367, TM1637_DATA

	;-------------------------- Инициализация портов ВВ для чипа DS1302

	sbi		DDR_DS1302, DS1302_CE
	sbi		DDR_DS1302, DS1302_SCLK

	;------------------------- Вывод DS1302_DAT устанавливается при отправке или чтении ds1302

	;-------------------------- Инициализация портов ВВ для кнопок

	cbi		DDR_BUTTON_MODE, BUTTON_MODE
	cbi		DDR_BUTTON_SET, BUTTON_SET

	;-------------------------- Инициализация таймеров

	ldi		r17, (1 << WGM12) | (1 << CS12) | (0 << CS11) | (1 << CS10) ; Выбор режима таймера (СТС, предделитель = 1024) 
	out		TCCR1B, r17

	;-------------------------- Таймер 1 

	ldi		r17, high(kdel1)	; 0.5 сек.
	out		OCR1AH, r17
	ldi		r17, low(kdel1)		 
	out		OCR1AL, r17
	ldi		r17, high(kdel1)	; чтобы сразу отобразилось
	out		TCNT1H, r17
	ldi		r17, low(kdel1-10)
	out		TCNT1L, r17

	;-------------------------- Таймер 1 

	rcall	change_tim0_to_normal_mode

	;--------------------------- Разрешаем прерывание от таймеров
		
	ldi 	r17, (1 << OCIE1A) | (1 << OCIE0A)
	out		TIMSK, r17

	;--------------------------- Разрешаем прерывание INT0 и INT1 по заднему фронту и режим сна (idle)

	ldi		r17, (1 << ISC01) | (0 << ISC00) | (1 << ISC11) | (0 << ISC10) | (1 << SE)
	out		MCUCR, r17

	ldi		r17, (1 << INT0) | (1 << INT1)
	out		GIMSK, r17