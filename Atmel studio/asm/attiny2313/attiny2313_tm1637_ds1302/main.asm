;
; attiny2313_tm1637.asm
;
; Created: 30.06.2020 14:09:01
; Author : verbkinm
;
; Описание:	
;	Отображение времени и даты на 4-х елементном дисплее с чипом TM1637, модуль времени ds1302. 		
;	Управление тремя кнопками, есть будильник.

.include "tn2313adef.inc"
.include "def_equ.inc"

;========================================================
;			Глобальные переменные в регистрах
;========================================================

.def	BYTE			= r24		; байт отсылки и приём данных из ds1302

.def	timer0_counter	= r25		; счетчик для TIM0 при отображении двоеточия и моргания устанавливаемых данных
.def	timer0_counter_alarm_unlock	= r1	; счетчик для разблоктровки будильника

.def	CONST_ZERO		= r0		; постоянный ноль

.def	alarm			= r2		; выключен == 0, будильник включён == 1,
.def	alarm_lock		= r3		; блокировка будильника, блокирован == 1, разблокирован == 0

.def	tm_bright_level = r4		; уровень яркости дисплея, 0..

.def	clock_mode		= r5		; Храниние состояния отображения (время == 0, дата == 1, год == 2)
.def	mode			= r6		; Храниние позиции элемента, который устанавливается 
									; (ничего не устанавливается == 0, часы == 1, минуты == 2, число == 3, месяц == 4, 
									; год == 5, будильник вкл\выкл == 6, часы будильника == 7, минуты будильника == 8,
									; моргать временем во время сигнала будильника == 9)

;========================================================
;			Глобальные переменные в EEPROM
;========================================================

.eseg
	.org	0x00

;------------------------- Хранение данных в упаковонном формате для будильника

bcd_alarm_hours:	.db		0x00
bcd_alarm_minutes:	.db		0x00

;========================================================
;				Глобальные переменные в RAM
;========================================================

;------------------------- Резервирование ячеек памяти

.dseg							; Выбираем сегмент ОЗУ
	.org	0x60				; Устанавливаем текущий адрес сегмента

;------------------------- Хранение данных в упаковонном формате от DS1302

bcd_minutes:	.db	1		;
bcd_hours:		.byte	1		;
bcd_day:		.byte	1		;
bcd_month:		.byte	1		;
bcd_year:		.byte	1		;

;------------------------- Хранение подготовленных данных для отображения на TM1637 по элементно

tm_h1:			.byte	1		; часы
tm_h2:			.byte	1		; часы

tm_m1:			.byte	1		; минуты
tm_m2:			.byte	1		; минуты

tm_d1:			.byte	1		; день месяца
tm_d2:			.byte	1		; день месяца

tm_mt1:			.byte	1		; месяц
tm_mt2:			.byte	1		; месяц

tm_y3:			.byte	1		; год
tm_y4:			.byte	1		; год
tm_y1:			.byte	1		; Тут будет фиксированное значение дальше по коду
tm_y2:			.byte	1		; Тут будет фиксированное значение дальше по коду

tm_ah1:			.byte	1		; часы будильник
tm_ah2:			.byte	1		; часы будильник
tm_am1:			.byte	1		; минуты будильник
tm_am2:			.byte	1		; минуты будильник

;========================================================
;			 Начало программного кода
;========================================================

.cseg		 					; Выбор сегмента программного кода
	.org	0					; Установка текущего адреса на ноль

start:	

	.include "interrupts_vector.asm"
	.include "interrupts.asm"
	.include "initialization.asm"

	;-------------------------- Очистка всех регистров

	clr		CONST_ZERO

	ldi		ZH, 0
	ldi		ZL, 2

	ldi		r17, 29
	mov		r1, r17

	clear_reg:
		dec		r1
		breq	clear_reg_end
		st		Z+, CONST_ZERO
		rjmp	clear_reg
	clear_reg_end:	

	;-------------------------- Очистка RAM под наши переменные

	ldi		ZH, 0
	ldi		ZL, 0x60
	ldi		r17, 22				; у нас 21 переменная = 22 минус первый декримент в цикле

	clear_ram:
		dec		r17
		breq	clear_ram_end
		st		Z+, CONST_ZERO
		rjmp	clear_ram
	clear_ram_end:	

	;-------------------------- Первые две цифры отображения года 

	ldi		ZH, high(tm_y1)
	ldi		ZL, low(tm_y1)

	ldi		r17, 0b01011011	; 2
	st		Z+, r17
	ldi		r17, 0b00111111	; 0
	st		Z+, r17

	;-------------------------- Считывание времени будильника из EEPROM для отображения на дисплее

	ldi		r18, bcd_alarm_hours
	rcall	EEPROM_read
	rcall	conv_ds1302_to_tm1637
	st		Z+, r16
	st		Z+, r15

	ldi		r18, bcd_alarm_minutes
	rcall	EEPROM_read
	rcall	conv_ds1302_to_tm1637
	st		Z+, r16
	st		Z, r15

	;-------------------------- В Proteus с минимальной яркостью ничего не отображается 

	ldi		r17, 1
	mov		tm_bright_level, r17

	sei							; Разрешение прерываний

	;-------------------------- Считать данные с DS1302

	rcall	DS1302_read_package_data

	main:		
		sleep
		rjmp	main			; Пустой бесконечный цикл в ожидании прерывания

;-------------------------- Массив максимального числа в месяцах

max_day_in_month:	.db		31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31

.include "alarm.asm"
.include "ds1302.asm"
.include "tm1637.asm"
.include "lib.asm"
